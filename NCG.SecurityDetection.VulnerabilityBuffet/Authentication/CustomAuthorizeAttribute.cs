using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Filters;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace NCG.SecurityDetection.VulnerabilityBuffet.Authentication
{
    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true, Inherited = true)]
    public class CustomAuthorizeAttribute : Attribute, IAuthorizationFilter
    {
        public void OnAuthorization(AuthorizationFilterContext context)
        {
            var authManager = (AuthManager)context.HttpContext.RequestServices.GetService(typeof(AuthManager));

            if (!authManager.IsUserSignedIn())
                context.Result = new StatusCodeResult((int)System.Net.HttpStatusCode.Unauthorized);
            //else
            //    context.Result = new StatusCodeResult((int)System.Net.HttpStatusCode.OK);
        }
    }
}
