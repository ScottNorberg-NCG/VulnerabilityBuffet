
@{
    ViewData["Title"] = "Shop";
}
@model List<ShopViewModel>

<partial name="_Menu" />
<div class="attack-page-content">
    <h1>@ViewData["Title"]</h1>
    <p>Shop for food groups! You can&apos;t actually buy anything, but there are several opportunities here to abuse business logic.</p>
    @using (Html.BeginForm())
    {
        <table cellpadding="5" cellspacing="5">
            <tr><th>Food Group</th><th>Quantity</th><th>Each</th><th>Price</th></tr>

            @for (int index = 0; index < Model.Count; index++)
            {
                <tr>
                    <td>@Model[index].FoodGroupText</td>
                    <td>
                        <input type="hidden" asp-for="@Model[index].FoodGroupID" />
                        <input type="hidden" asp-for="@Model[index].Price" />
                        <select asp-for="@Model[index].Quantity" itemIndex="@index" onchange="ReRunTotal(@index, @Model[index].Price)">
                            @for (var quantIndex = 0; quantIndex < 10; quantIndex++)
                            {
                                if (Model[index].Quantity == quantIndex)
                                {
                                    <option selected>@quantIndex</option>
                                }

                                else
                                {
                                    <option>@quantIndex</option>
                                }
                            }
                        </select>
                    </td>
                    <td align="right">$@Model[index].Price</td>
                    <td align="right">
                        $<span class="total-column" id="Total_@index">@(Model[index].Price * Model[index].Quantity)</span>
                    </td>
                </tr>
            }

            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td align="right">$<span id="Total">0.00</span></td>
            </tr>
        </table>
        <button type="submit">Buy Stuff!</button>
    }
</div>

<script>
    function ReRunTotal(index, price) {
        var quantity = $("[itemIndex='" + index + "']").val();

        $("#Total_" + index).text(quantity * price);

        CalculateTotalOrder();
    }

    function CalculateTotalOrder() {
        var total = 0;

        $(".total-column").each(function () {
            total += Number($(this).text());
        });

        $("#Total").text(total);
    }

    CalculateTotalOrder();
</script>