using Microsoft.AspNetCore.Html;
using Microsoft.AspNetCore.Mvc.Rendering;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web;

namespace NCG.SecurityDetection.VulnerabilityBuffet.Views
{
    public static class HtmlHelperExtensionMethods
    {
        public static IHtmlContent Span(this IHtmlHelper htmlHelper, string content)
        {
            return new HtmlString($"<span>{content}</span>");
        }

        public static IHtmlContent Bold(this IHtmlHelper htmlHelper, string content)
        {
            return new HtmlString($"<b>{content}</b>");
        }

        public static IHtmlContent Italic(this IHtmlHelper htmlHelper, string content)
        {
            return new HtmlString($"<i>{content}</i>");
        }

        public static IHtmlContent Italic_Safe(this IHtmlHelper htmlHelper, string content)
        {
            //System.Net.WebUtility.HtmlEncode();
            var encoded = HttpUtility.HtmlEncode(content);
            return new HtmlString($"<i>{encoded}</i>");
        }

        public static IHtmlContent EncodeSingleQuotes(this IHtmlHelper htmlHelper, string content)
        {
            //First, remove script tags to force scanners to use some sort of HTML element
            content = Regex.Replace(content, "<script", "", RegexOptions.IgnoreCase);
            return new HtmlString(content.Replace("'", "&apos;"));
        }

        public static IHtmlContent EncodeDoubleQuotes(this IHtmlHelper htmlHelper, string content)
        {
            //First, remove script tags to force scanners to use some sort of HTML element
            content = Regex.Replace(content, "<script", "", RegexOptions.IgnoreCase);
            return new HtmlString(content.Replace("\"", "&quot;"));
        }
    }
}
