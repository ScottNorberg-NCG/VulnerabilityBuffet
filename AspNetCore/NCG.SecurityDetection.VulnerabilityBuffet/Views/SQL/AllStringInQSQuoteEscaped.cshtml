
@{
    ViewData["Title"] = "All String In QS (Quote Escaped)";
}
@model AccountUserViewModel

<h1>@ViewData["Title"]</h1>
<partial name="_Menu" />
<div class="attack-page-content">
    <p>
        Instead of using SQL parameters, this page escapes any incoming quotes. 
        This is likely unsafe, but we can&apos;t find a specific exploit.
        We&apos;ll leave it here, though, as a test for scanning tools.
    </p>
    <h2>You searched for: @Model.SearchText</h2>
    <table width="100%">
        <tr><th>ID</th><th>Food Name</th><th>Food Group</th><th>Calories</th><th>Protein</th><th>Fat</th><th>Carbohydrates</th></tr>
        @foreach (var food in Model.Foods)
        {
            <tr>
                <td>@food.FoodID</td>
                <td>@food.FoodName</td>
                <td>@food.FoodGroup</td>
                <td>@food.Calories</td>
                <td>@food.Protein</td>
                <td>@food.Fat</td>
                <td>@food.Carbohydrates</td>
            </tr>
        }
    </table>
</div>
